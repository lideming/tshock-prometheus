name: Release

on:
  push:
    tags:
    - 'v*'

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1
    - name: NuGet
      run: nuget restore
    - name: Get TShock libs
      run: |
        curl -fsSLJo TShock.zip https://github.com/Pryaxis/TShock/releases/download/v4.4.0-pre15/TShock4.4.0_Pre15_Terraria1.4.1.2.zip
        7z e TShock.zip -olib\ OTAPI.dll TerrariaServer.exe TShockAPI.dll -r
    - name: Build
      run: msbuild /p:Configuration=Release
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.1
      with:
        path: TShockPrometheus/bin/**/*
    - name: Prepare Release Artifact
      run: |
        cd /D TShockPrometheus/bin/x86/Release/net462
        7z a ../../../../../TShockPrometheus_${{ github.ref }}.zip TShockPrometheus.dll System.ValueTuple.dll Prometheus.NetStandard.dll
        cd ../../../../..
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true
    - name: Upload Release Artifacts
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./my-artifact.zip
        asset_name: my-artifact.zip
        asset_content_type: application/zip
